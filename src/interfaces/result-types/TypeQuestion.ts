import {TypeAnswer} from './TypeAnswer';
import {TypeClosedDetails} from './TypeClosedDetails';
import {TypeComment} from './TypeComment';
import {TypeMigrationInfo} from './TypeMigrationInfo';
import {TypeNotice} from './TypeNotice';
import {TypeShallowUser} from './TypeShallowUser';

export interface TypeQuestion {
  readonly accepted_answer_id?: number;
  readonly answer_count?: number;
  readonly answers?: TypeAnswer[];
  readonly body?: string;
  readonly body_markdown?: string;
  readonly bounty_amount?: number;
  readonly bounty_closes_date?: Date;
  readonly bounty_user?: TypeShallowUser;
  readonly can_close?: boolean;
  readonly can_flag?: boolean;
  readonly close_vote_count?: number;
  readonly closed_date?: Date;
  readonly closed_details?: TypeClosedDetails;
  readonly closed_reason?: string;
  readonly comment_count?: number;
  readonly comments?: TypeComment[];
  readonly community_owned_date?: Date;
  readonly creation_date?: Date;
  readonly delete_vote_count?: number;
  readonly down_vote_count?: number;
  readonly downvoted?: boolean;
  readonly favorite_count?: number;
  readonly favorited?: boolean;
  readonly is_answered?: boolean;
  readonly last_activity_date?: Date;
  readonly last_edit_date?: Date;
  readonly last_editor?: TypeShallowUser;
  readonly link?: string;
  readonly locked_date?: Date;
  readonly migrated_from?: TypeMigrationInfo;
  readonly migrated_to?: TypeMigrationInfo;
  readonly notice?: TypeNotice;
  readonly owner?: TypeShallowUser;
  readonly protected_date?: Date;
  readonly question_id?: number;
  readonly reopen_vote_count?: number;
  readonly score?: number;
  readonly share_link?: string;
  readonly tags?: string[];
  readonly title?: string;
  readonly up_vote_count?: number;
  readonly upvoted?: boolean;
  readonly view_count?: number;
}
